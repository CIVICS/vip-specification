<?xml version="1.0" encoding="utf-8"?>
<!-- working version of VIP schema based on 3.0 for comments
changed all id types to string
added ocdid to district
reference elements for polling location
-->
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified" version="5.0.1" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:element name="VipObject">
    <xs:complexType>
      <xs:choice maxOccurs="unbounded">
	    <!-- structural VIP elements-->
        <xs:element name="Source" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:all>
              <xs:element name="Name" type="xs:string" />
              <xs:element name="VipID" type="xs:string" />
              <xs:element name="DateTime" type="xs:dateTime" />
              <xs:element name="Description" type="xs:string" minOccurs="0" />
              <xs:element name="OrganizationUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="FeedContactID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="TouUrl" type="xs:anyURI" minOccurs="0" />
            </xs:all>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Election" minOccurs="1" maxOccurs="1">
          <xs:complexType>
            <xs:all>
              <xs:element name="Date" type="xs:date" />
              <xs:element name="ElectionType" type="xs:string" minOccurs="0" />
              <xs:element name="StateID" type="xs:IDREF" />
              <xs:element name="Statewide" type="xs:boolean" minOccurs="0" />
              <xs:element name="RegistrationInfo" type="xs:string" minOccurs="0" />
              <xs:element name="AbsenteeBallotInfo" type="xs:string" minOccurs="0" />
              <xs:element name="ResultsUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="PollingHours" type="xs:string" minOccurs="0" />
              <xs:element name="ElectionDayRegistration" type="xs:boolean" minOccurs="0" />
              <xs:element name="RegistrationDeadline" type="xs:date" minOccurs="0" />
              <xs:element name="AbsenteeRequestDeadline" type="xs:date" minOccurs="0" />
            </xs:all>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <!-- end of structural VIP elements-->
        <!-- geographic elements -->
        <xs:element name="State">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" type="xs:string" />
              <xs:element name="ElectionAdministrationID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="PollingLocationID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Locality">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" type="xs:string" />
              <xs:element name="StateID" type="xs:IDREF" />
              <xs:element name="Type" type="xs:string" />
              <xs:element name="ElectionAdministrationID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="PollingLocationID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="Precinct">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
              <xs:element name="Number" type="xs:string" minOccurs="0" maxOccurs="1" />
              <xs:element name="LocalityID" type="xs:IDREF" minOccurs="1" maxOccurs="1" />
              <xs:element name="ElectoralDistrictID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="Ward" type="xs:string" minOccurs="0" maxOccurs="1" />
              <xs:element name="PollingLocationID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="MailOnly" type="xs:boolean" minOccurs="0" maxOccurs="1" />
              <xs:element name="BallotStyleImageUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="PrecinctSplit">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" type="xs:string" minOccurs="1" maxOccurs="1" />
              <xs:element name="PrecinctID" type="xs:IDREF" minOccurs="1" maxOccurs="1" />
              <xs:element name="ElectoralDistrictID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="PollingLocationID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="BallotStyleImageUrl" type="xs:anyURI" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="StreetSegment">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="StartHouseNumber" type="xs:integer" />
              <xs:element name="EndHouseNumber" type="xs:integer" />
              <xs:element name="OddEvenBoth" type="OebEnum" />
              <xs:element name="NonHouseAddress" type="DetailAddressType" />
              <xs:element name="UnitNumber" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="PrecinctID" type="xs:IDREF" />
              <xs:element name="PrecinctSplitID" type="xs:IDREF" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <!-- end of geographic elements-->
        <!-- administration elements-->
        <xs:element name="ElectionAdministration">
          <xs:complexType>
            <xs:all>
              <xs:element name="Name" type="xs:string" minOccurs="0" />
              <xs:element name="EoID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="OvcID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="PhysicalAddress" type="SimpleAddressType" minOccurs="0" />
              <xs:element name="MailingAddress" type="SimpleAddressType" minOccurs="0" />
              <xs:element name="ElectionsUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="RegistrationUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="AmIRegisteredUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="AbsenteeUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="WhereDoIVoteUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="WhatIsOnMyBallotUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="RulesUrl" type="xs:anyURI" minOccurs="0" />
              <xs:element name="VoterServices" type="xs:string" minOccurs="0" />
              <xs:element name="Hours" type="xs:string" minOccurs="0" />
            </xs:all>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="ElectionOfficial">
          <xs:complexType>
            <xs:all>
              <xs:element name="Name" type="xs:string" />
              <xs:element name="Title" type="xs:string" minOccurs="0" />
              <xs:element name="Phone" type="xs:string" minOccurs="0" />
              <xs:element name="Fax" type="xs:string" minOccurs="0" />
              <xs:element name="Email" type="xs:string" minOccurs="0" />
            </xs:all>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="PollingLocation">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Address" type="SimpleAddressType" />
              <xs:element name="Directions" type="xs:string" minOccurs="0" maxOccurs="1" />
              <xs:element name="PhotoUrl" type="xs:anyURI" minOccurs="0" maxOccurs="1" />
              <xs:element name="EarlyVoting" type="xs:boolean" minOccurs="0" maxOccurs="1" />
              <xs:element name="DropBox" type="xs:boolean" minOccurs="0" maxOccurs="1" />
              <xs:element name="HoursOpenID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="ElectoralDistrict">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Name" type="xs:string" />
              <xs:element name="Type" type="xs:string" minOccurs="0" />
              <xs:element name="Number" type="xs:integer" minOccurs="0" />
              <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <!--end of administration elements-->
        <!-- This replaces the "referendum" element in VIP -->
        <xs:element name="BallotMeasureContest" type="BallotMeasureContestType" maxOccurs="unbounded" />
        <xs:element name="Contest" type="ContestType" maxOccurs="unbounded" />
        <xs:element name="BallotSelection" type="BallotSelectionType" maxOccurs="unbounded" />
        <!-- Generic string for a ballot measure (referendum) selection -->
        <xs:element name="BallotMeasureSelection">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="BallotSelectionType">
                <xs:sequence>
                  <xs:element name="Selection" type="xs:string" />
                </xs:sequence>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="BallotStyle">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OrderedContest" type="OrderedContestType" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="InfoUrl" type="xs:anyURI" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="Candidate">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PartyID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="PersonID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="BallotName" type="xs:string" />
              <xs:element name="FileDate" type="xs:dateTime" minOccurs="0" />
              <xs:element name="IsIncumbent" type="xs:boolean" minOccurs="0" />
              <xs:element name="IsTopTicket" type="xs:boolean" minOccurs="0" />
              <xs:element name="PostElectionStatus" type="CandidatePostElectionStatus" minOccurs="0" />
              <xs:element name="PreElectionStatus" type="CandidatePreElectionStatus" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="CandidateContest">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="ContestType">
                <xs:sequence>
                  <xs:element name="OfficeID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
                  <xs:element name="PrimaryPartyID" type="xs:IDREF" minOccurs="0" />
                  <xs:element name="NumberElected" type="xs:integer" minOccurs="0" />
                  <xs:element name="VotesAllowed" type="xs:integer" />
                </xs:sequence>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="CandidateSelection">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="BallotSelectionType">
                <xs:sequence>
                  <xs:element name="CandidateID" type="xs:IDREF" maxOccurs="unbounded" />
                  <xs:element name="EndorsementPartyID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="isWriteIn" type="xs:boolean" use="optional" />
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="Contact">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Url" type="xs:anyURI" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="AddressLine" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="Email" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="Fax" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="HoursOpenID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="Name" type="xs:string" minOccurs="0" />
              <xs:element name="Phone" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="Office">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ElectoralDistrictID" type="xs:IDREF" />
              <xs:element name="ContactID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="Name" type="xs:string" />
              <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="Partisan" type="xs:boolean" minOccurs="0" />
              <xs:element name="TermEndDate" type="xs:date" minOccurs="0" />
              <xs:element name="TermStartDate" type="xs:date" minOccurs="0" />
              <xs:element name="TermType" type="TermType" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="Party">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Abbreviation" type="xs:string" minOccurs="0" />
              <xs:element name="Name" type="xs:string" />
              <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="ColorCode" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:pattern value="[0-9a-f]{6}" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LogoUrl" type="xs:anyURI" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="PartyContest">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="ContestType" />
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="PartySelection">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="BallotSelectionType">
                <xs:sequence>
                  <xs:element name="PartyID" type="xs:IDREF" maxOccurs="unbounded" />
                </xs:sequence>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="Person">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="DateOfBirth" type="xs:date" minOccurs="0" />
              <xs:element name="ContactID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="PartyID" type="xs:IDREF" minOccurs="0" />
              <xs:element name="FirstName" type="xs:string" minOccurs="0" />
              <xs:element name="LastName" type="xs:string" />
              <xs:element name="MiddleName" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
              <xs:element name="Nickname" type="xs:string" minOccurs="0" />
              <xs:element name="Prefix" type="xs:string" minOccurs="0" />
              <xs:element name="Profession" type="xs:string" minOccurs="0" />
              <xs:element name="Suffix" type="xs:string" minOccurs="0" />
              <xs:element name="Title" type="xs:string" minOccurs="0" />
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>

        <xs:element name="RetentionContest">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="BallotMeasureContestType">
                <xs:sequence>
                  <xs:element name="CandidateID" type="xs:IDREF" />
                  <xs:element name="OfficeID" type="xs:IDREF" minOccurs="0" />
                </xs:sequence>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>

        <xs:element name="HoursOpen">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Schedule" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="StartDate" type="xs:date" minOccurs="0" />
                    <xs:element name="EndDate" type="xs:date" minOccurs="0" />
                    <xs:element name="Hours" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="StartTime" maxOccurs="1">
                            <xs:simpleType>
                              <xs:restriction base="xs:time">
                                <xs:pattern value="(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]|(24:00:00))(Z|[+-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                          <xs:element name="EndTime" maxOccurs="1">
                            <xs:simpleType>
                              <xs:restriction base="xs:time">
                                <xs:pattern value="(([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]|(24:00:00))(Z|[+-]((0[0-9]|1[0-3]):[0-5][0-9]|14:00))" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:element>
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="OrByAppointment" type="xs:boolean" maxOccurs="1" />
                    <xs:element name="OnlyByAppointment" type="xs:boolean" maxOccurs="1" />
                    <xs:element name="SubjectToChange" type="xs:boolean" minOccurs="0" maxOccurs="1" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
        <xs:element name="ExternalIdentifier">
          <xs:complexType>
            <xs:all>
              <xs:element name="Type" type="IdentifierType" />
              <xs:element name="OtherType" type="xs:string" minOccurs="0" />
              <xs:element name="Value" type="xs:string" minOccurs="0" />
            </xs:all>
            <xs:attribute name="id" type="xs:ID" use="required" />
          </xs:complexType>
        </xs:element>
      </xs:choice>
      <xs:attribute name="schemaVersion" type="xs:decimal" use="required" fixed="3.0" />
    </xs:complexType>
  </xs:element>

  <xs:complexType name="ContestType">
    <xs:sequence>
      <xs:element name="BallotSelectionID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="ExternalIdentifierID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
      <xs:element name="ElectoralDistrictID" type="xs:IDREF" />
      <xs:element name="Name" type="xs:string" />
      <xs:element name="Abbreviation" type="xs:string" minOccurs="0" />
      <xs:element name="BallotTitle" type="xs:string" minOccurs="0" />
      <xs:element name="BallotSubTitle" type="xs:string" minOccurs="0" />
      <xs:element name="HasRotation" type="xs:boolean" minOccurs="0" />
      <xs:element name="VoteVariation" type="VoteVariation" minOccurs="0" />
      <xs:element name="OtherVoteVariation" type="xs:string" minOccurs="0" />
      <xs:element name="ElectorateSpecification" type="xs:string" minOccurs="0" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>
  <xs:complexType name="BallotSelectionType">
    <xs:attribute name="id" type="xs:ID" use="required" />
  </xs:complexType>

  <xs:complexType name="BallotMeasureContestType">
    <xs:complexContent>
      <xs:extension base="ContestType">
        <xs:sequence>
          <xs:element name="ConStatement" type="xs:string" minOccurs="0" />
          <xs:element name="FullText" type="xs:string" minOccurs="0" />
          <xs:element name="ProStatement" type="xs:string" minOccurs="0" />
          <xs:element name="SummaryText" type="xs:string" minOccurs="0" />
          <xs:element name="BallotMeasureType" type="BallotMeasureType" minOccurs="0" />
          <xs:element name="OtherBallotMeasureType" type="xs:string" />
          <xs:element name="EffectOfAbstain" type="xs:string" />
          <xs:element name="PassageThreshold" type="xs:string" />
          <!-- Info URL added from current VIP spec. -->
          <xs:element name="InfoUrl" type="xs:anyURI" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="OrderedContestType">
    <xs:sequence>
      <xs:element name="ContestID" type="xs:IDREF" />
      <xs:element name="BallotSelectionID" type="xs:IDREF" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DetailAddressType">
    <xs:all>
      <xs:element name="HouseNumber" type="xs:integer" minOccurs="0" />
      <xs:element name="HouseNumberPrefix" type="xs:string" minOccurs="0" />
      <xs:element name="HouseNumberSuffix" type="xs:string" minOccurs="0" />
      <xs:element name="StreetDirection" type="xs:string" minOccurs="0" />
      <xs:element name="StreetName" type="xs:string" />
      <xs:element name="StreetSuffix" type="xs:string" minOccurs="0" />
      <xs:element name="AddressDirection" type="xs:string" minOccurs="0" />
      <xs:element name="Apartment" type="xs:string" minOccurs="0" />
      <xs:element name="City" type="xs:string" />
      <xs:element name="State" type="xs:string" />
      <xs:element name="Zip" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <!--
    langString: a type representing a string with a language specified.
  -->
  <xs:complexType name="LangString">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="lang" type="xs:language" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!--
    internationalizedText: a type representing a block of text translated into
    one or more languages.

    For example, an instance of:

    <xs:element name="Office" type="internationalizedText" />

    could be:

    <Office internationalizedTextID="office_mayor">
      <text lang="en">Mayor</text>
      <text lang="es">Alcalde</text>
      <text lang="zh">市長</text>
    </Office>

    The optional "internationalizedTextID" attribute can be used to track
    the source of the strings, for example if the translated values came from
    localized resource files.
-->
  <xs:complexType name="InternationalizedText">
    <xs:sequence>
      <xs:element name="Text" type="LangString" minOccurs="1" maxOccurs="unbounded" />
    </xs:sequence>
    <xs:attribute name="internationalizedTextID" type="xs:IDREF" />
  </xs:complexType>
  <xs:complexType name="SimpleAddressType">
    <xs:all>
      <xs:element name="LocationName" type="xs:string" minOccurs="0" />
      <xs:element name="Line1" type="xs:string" />
      <xs:element name="Line2" type="xs:string" minOccurs="0" />
      <xs:element name="Line3" type="xs:string" minOccurs="0" />
      <xs:element name="City" type="xs:string" />
      <xs:element name="State" type="xs:string" />
      <xs:element name="Zip" type="xs:string" />
    </xs:all>
  </xs:complexType>
  <xs:simpleType name="IdentifierType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ocd-id" />
      <xs:enumeration value="fips" />
      <xs:enumeration value="national" />
      <xs:enumeration value="state" />
      <xs:enumeration value="local" />
      <xs:enumeration value="other" />
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VotesWithCertification">
    <xs:simpleContent>
      <xs:extension base="xs:integer">
        <xs:attribute name="certification" type="CertificationEnum" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <!-- Start of enumerated values -->
  <xs:simpleType name="CertificationEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="unofficial-partial" />
      <xs:enumeration value="unofficial-complete" />
      <xs:enumeration value="certified" />
      <xs:enumeration value="unofficial-partial" />
      <xs:enumeration value="unofficial-complete" />
      <xs:enumeration value="unofficial-partial" />
      <xs:enumeration value="unofficial-complete" />
      <xs:enumeration value="certified" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="OebEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="odd" />
      <xs:enumeration value="even" />
      <xs:enumeration value="both" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="BallotMeasureType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ballot-measure" />
      <xs:enumeration value="initiative" />
      <xs:enumeration value="referendum" />
      <xs:enumeration value="other" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CandidatePostElectionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="advanced-to-runoff" />
      <xs:enumeration value="projected-winner" />
      <xs:enumeration value="winner" />
      <xs:enumeration value="withdrawn" />
      <xs:enumeration value="write-in" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="CandidatePreElectionStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="filed" />
      <xs:enumeration value="qualified" />
      <xs:enumeration value="withdrawn" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="TermType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="full-term" />
      <xs:enumeration value="unexpired-term" />
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="VoteVariation">
    <!-- NOTE: This is an absolute mess and conflates all sorts of concepts.
    What if there's a super-majority RCV contest? Just ... ugh. Putting
    this here for the sake of initial compatability but it just needs
    to be nuked from orbit and started all over again.
    -->
    <xs:restriction base="xs:string">
      <xs:enumeration value="1-of-m" />
      <xs:enumeration value="approval" />
      <xs:enumeration value="cumulative" />
      <xs:enumeration value="majority" />
      <xs:enumeration value="n-of-m" />
      <xs:enumeration value="other" />
      <xs:enumeration value="plurality" />
      <xs:enumeration value="proportional" />
      <xs:enumeration value="range" />
      <xs:enumeration value="rcv" />
      <xs:enumeration value="rcv-borda" />
      <xs:enumeration value="super-majority" />
    </xs:restriction>
  </xs:simpleType>
  <!-- End of enumerated values -->

</xs:schema>
